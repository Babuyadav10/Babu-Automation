<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="12" total="18" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="13105" started-at="2022-07-19T08:38:37Z" finished-at="2022-07-19T08:38:50Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="13105" started-at="2022-07-19T08:38:37Z" finished-at="2022-07-19T08:38:50Z">
      <class name="CT_APITesting.RolesTest">
        <test-method status="PASS" signature="StartApiTest()[pri:0, instance:CT_APITesting.RolesTest@7c0e2abd]" name="StartApiTest" is-config="true" duration-ms="1" started-at="2022-07-19T08:38:42Z" finished-at="2022-07-19T08:38:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StartApiTest -->
        <test-method status="PASS" signature="beforeMethodFunction(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:CT_APITesting.RolesTest@7c0e2abd]" name="beforeMethodFunction" is-config="true" duration-ms="4" started-at="2022-07-19T08:38:42Z" finished-at="2022-07-19T08:38:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@48b4a043]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void CT_APITesting.RolesTest.createRoles()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodFunction -->
        <test-method status="PASS" signature="createRoles()[pri:0, instance:CT_APITesting.RolesTest@7c0e2abd]" name="createRoles" duration-ms="1429" started-at="2022-07-19T08:38:42Z" description="Verify create roles functionality" finished-at="2022-07-19T08:38:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createRoles -->
        <test-method status="PASS" signature="afterMethodFunction(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:CT_APITesting.RolesTest@7c0e2abd]" name="afterMethodFunction" is-config="true" duration-ms="56" started-at="2022-07-19T08:38:43Z" finished-at="2022-07-19T08:38:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void CT_APITesting.RolesTest.createRoles()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=createRoles status=SUCCESS method=RolesTest.createRoles()[pri:0, instance:CT_APITesting.RolesTest@7c0e2abd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodFunction -->
      </class> <!-- CT_APITesting.RolesTest -->
      <class name="CT_APITesting.AuthTokenTest">
        <test-method status="PASS" signature="StartApiTest()[pri:0, instance:CT_APITesting.AuthTokenTest@402f32ff]" name="StartApiTest" is-config="true" duration-ms="1" started-at="2022-07-19T08:38:45Z" finished-at="2022-07-19T08:38:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StartApiTest -->
        <test-method status="PASS" signature="beforeMethodFunction(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:CT_APITesting.AuthTokenTest@402f32ff]" name="beforeMethodFunction" is-config="true" duration-ms="4" started-at="2022-07-19T08:38:45Z" finished-at="2022-07-19T08:38:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@48b4a043]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void CT_APITesting.AuthTokenTest.createAuthToken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodFunction -->
        <test-method status="PASS" signature="createAuthToken()[pri:0, instance:CT_APITesting.AuthTokenTest@402f32ff]" name="createAuthToken" duration-ms="2996" started-at="2022-07-19T08:38:45Z" description="verify Auth token functionality" finished-at="2022-07-19T08:38:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAuthToken -->
        <test-method status="PASS" signature="afterMethodFunction(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:CT_APITesting.AuthTokenTest@402f32ff]" name="afterMethodFunction" is-config="true" duration-ms="42" started-at="2022-07-19T08:38:48Z" finished-at="2022-07-19T08:38:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void CT_APITesting.AuthTokenTest.createAuthToken()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=createAuthToken status=SUCCESS method=AuthTokenTest.createAuthToken()[pri:0, instance:CT_APITesting.AuthTokenTest@402f32ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodFunction -->
      </class> <!-- CT_APITesting.AuthTokenTest -->
      <class name="CT_APITesting.BasicTest">
        <test-method status="PASS" signature="StartApiTest()[pri:0, instance:CT_APITesting.BasicTest@48eff760]" name="StartApiTest" is-config="true" duration-ms="0" started-at="2022-07-19T08:38:43Z" finished-at="2022-07-19T08:38:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StartApiTest -->
        <test-method status="PASS" signature="beforeMethodFunction(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:CT_APITesting.BasicTest@48eff760]" name="beforeMethodFunction" is-config="true" duration-ms="1" started-at="2022-07-19T08:38:43Z" finished-at="2022-07-19T08:38:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@48b4a043]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void CT_APITesting.BasicTest.createApiKey()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodFunction -->
        <test-method status="PASS" signature="createApiKey()[pri:0, instance:CT_APITesting.BasicTest@48eff760]" name="createApiKey" duration-ms="1396" started-at="2022-07-19T08:38:43Z" description="Verify if user can create an API key" finished-at="2022-07-19T08:38:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createApiKey -->
        <test-method status="PASS" signature="afterMethodFunction(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:CT_APITesting.BasicTest@48eff760]" name="afterMethodFunction" is-config="true" duration-ms="52" started-at="2022-07-19T08:38:45Z" finished-at="2022-07-19T08:38:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void CT_APITesting.BasicTest.createApiKey()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=createApiKey status=SUCCESS method=BasicTest.createApiKey()[pri:0, instance:CT_APITesting.BasicTest@48eff760] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodFunction -->
      </class> <!-- CT_APITesting.BasicTest -->
      <class name="CT_APITesting.UsersTest">
        <test-method status="PASS" signature="StartApiTest()[pri:0, instance:CT_APITesting.UsersTest@3c756e4d]" name="StartApiTest" is-config="true" duration-ms="1" started-at="2022-07-19T08:38:38Z" finished-at="2022-07-19T08:38:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StartApiTest -->
        <test-method status="PASS" signature="beforeMethodFunction(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:CT_APITesting.UsersTest@3c756e4d]" name="beforeMethodFunction" is-config="true" duration-ms="3" started-at="2022-07-19T08:38:38Z" finished-at="2022-07-19T08:38:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@48b4a043]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void CT_APITesting.UsersTest.createUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodFunction -->
        <test-method status="PASS" signature="createUser()[pri:0, instance:CT_APITesting.UsersTest@3c756e4d]" name="createUser" duration-ms="4253" started-at="2022-07-19T08:38:38Z" description="Verity create users functionality" finished-at="2022-07-19T08:38:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
        <test-method status="PASS" signature="afterMethodFunction(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:CT_APITesting.UsersTest@3c756e4d]" name="afterMethodFunction" is-config="true" duration-ms="72" started-at="2022-07-19T08:38:42Z" finished-at="2022-07-19T08:38:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void CT_APITesting.UsersTest.createUser()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=createUser status=SUCCESS method=UsersTest.createUser()[pri:0, instance:CT_APITesting.UsersTest@3c756e4d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodFunction -->
      </class> <!-- CT_APITesting.UsersTest -->
      <class name="RealtedTest.PojoTest">
        <test-method status="PASS" signature="beforeSuiteFunction(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:RealtedTest.PojoTest@4de8b406]" name="beforeSuiteFunction" is-config="true" duration-ms="22" started-at="2022-07-19T08:38:37Z" finished-at="2022-07-19T08:38:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuiteFunction -->
        <test-method status="PASS" signature="beforeTestFunction(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.testng.ITestContext)[pri:0, instance:RealtedTest.PojoTest@4de8b406]" name="beforeTestFunction" is-config="true" duration-ms="121" started-at="2022-07-19T08:38:37Z" finished-at="2022-07-19T08:38:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[org.testng.TestRunner@48b4a043]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestFunction -->
        <test-method status="PASS" signature="StartApiTest()[pri:0, instance:RealtedTest.PojoTest@4de8b406]" name="StartApiTest" is-config="true" duration-ms="482" started-at="2022-07-19T08:38:37Z" finished-at="2022-07-19T08:38:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StartApiTest -->
        <test-method status="PASS" signature="beforeMethodFunction(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:RealtedTest.PojoTest@4de8b406]" name="beforeMethodFunction" is-config="true" duration-ms="6" started-at="2022-07-19T08:38:37Z" finished-at="2022-07-19T08:38:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@48b4a043]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void RealtedTest.PojoTest.userDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodFunction -->
        <test-method status="PASS" signature="userDetails()[pri:0, instance:RealtedTest.PojoTest@4de8b406]" name="userDetails" duration-ms="1" started-at="2022-07-19T08:38:37Z" finished-at="2022-07-19T08:38:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userDetails -->
        <test-method status="PASS" signature="afterMethodFunction(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:RealtedTest.PojoTest@4de8b406]" name="afterMethodFunction" is-config="true" duration-ms="210" started-at="2022-07-19T08:38:37Z" finished-at="2022-07-19T08:38:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RealtedTest.PojoTest.userDetails()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=userDetails status=SUCCESS method=PojoTest.userDetails()[pri:0, instance:RealtedTest.PojoTest@4de8b406] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodFunction -->
        <test-method status="PASS" signature="beforeMethodFunction(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:RealtedTest.PojoTest@4de8b406]" name="beforeMethodFunction" is-config="true" duration-ms="3" started-at="2022-07-19T08:38:48Z" finished-at="2022-07-19T08:38:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@48b4a043]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void RealtedTest.PojoTest.userDetails1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodFunction -->
        <test-method status="FAIL" signature="userDetails1()[pri:1, instance:RealtedTest.PojoTest@4de8b406]" name="userDetails1" duration-ms="1852" started-at="2022-07-19T08:38:48Z" finished-at="2022-07-19T08:38:50Z">
          <exception class="com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException">
            <message>
              <![CDATA[Unrecognized field "error" (class CT_APITesting.CriticalJsonTest), not marked as ignorable (6 known properties: "per_page", "ad", "total", "total_pages", "data", "page"])
 at [Source: (String)"{"error":{"message":"The API endpoint is invalid. Please verify the API call.","devMessage":"The endpoint of the API is invalid. Please have the API call checked.","source":"chat-api","code":"ERR_API_NOT_FOUND"}}"; line: 1, column: 11] (through reference chain: CT_APITesting.CriticalJsonTest["error"])]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "error" (class CT_APITesting.CriticalJsonTest), not marked as ignorable (6 known properties: "per_page", "ad", "total", "total_pages", "data", "page"])
 at [Source: (String)"{"error":{"message":"The API endpoint is invalid. Please verify the API call.","devMessage":"The endpoint of the API is invalid. Please have the API call checked.","source":"chat-api","code":"ERR_API_NOT_FOUND"}}"; line: 1, column: 11] (through reference chain: CT_APITesting.CriticalJsonTest["error"])
at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:855)
at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1212)
at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1604)
at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1582)
at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:299)
at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:156)
at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4524)
at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3466)
at com.fasterxml.jackson.databind.ObjectMapper$readValue$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:148)
at io.restassured.internal.path.json.mapping.JsonPathJackson2ObjectDeserializer.deserialize(JsonPathJackson2ObjectDeserializer.groovy:46)
at io.restassured.path.json.mapping.JsonPathObjectDeserializer$deserialize.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.mapping.Jackson2Mapper.deserialize(Jackson2Mapper.groovy:58)
at io.restassured.mapper.ObjectMapper$deserialize.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.mapping.ObjectMapping.parseWithJackson2(ObjectMapping.groovy:238)
at io.restassured.internal.mapping.ObjectMapping$parseWithJackson2$0.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:217)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:240)
at io.restassured.internal.mapping.ObjectMapping.deserialize(ObjectMapping.groovy:59)
at io.restassured.internal.mapping.ObjectMapping$deserialize.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.as(RestAssuredResponseOptionsGroovyImpl.groovy:226)
at io.restassured.internal.RestAssuredResponseOptionsImpl.as(RestAssuredResponseOptionsImpl.java:169)
at RealtedTest.PojoTest.userDetails1(PojoTest.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userDetails1 -->
        <test-method status="PASS" signature="afterMethodFunction(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:RealtedTest.PojoTest@4de8b406]" name="afterMethodFunction" is-config="true" duration-ms="56" started-at="2022-07-19T08:38:50Z" finished-at="2022-07-19T08:38:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RealtedTest.PojoTest.userDetails1()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=userDetails1 status=FAILURE method=PojoTest.userDetails1()[pri:1, instance:RealtedTest.PojoTest@4de8b406] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodFunction -->
        <test-method status="PASS" signature="EndAPITest()[pri:0, instance:RealtedTest.PojoTest@4de8b406]" name="EndAPITest" is-config="true" duration-ms="2" started-at="2022-07-19T08:38:50Z" finished-at="2022-07-19T08:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EndAPITest -->
        <test-method status="PASS" signature="zipFolder()[pri:0, instance:RealtedTest.PojoTest@4de8b406]" name="zipFolder" is-config="true" duration-ms="8" started-at="2022-07-19T08:38:50Z" finished-at="2022-07-19T08:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zipFolder -->
      </class> <!-- RealtedTest.PojoTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
